<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mingcai.edu.modules.oa.dao.user.OaUserAccountUserLogDao">
    
	<sql id="oaUserAccountUserLogColumns">
		a.id AS "id",
		a.user_id AS "userId",
		a.extended_id as "extendedId",
		a.sales_volume_id AS "salesVolumeId",
		a.branch_quota/100 AS "branchQuota",
		a.pool_funds/100 AS "poolFunds",
		a.cost_incurred/100 AS "costIncurred",
		a.money/100 AS "money",
		a.spare_a/100 AS "spareA",
		a.spare_b/100 AS "spareB",
		a.spare_c/100 AS "spareC",
		a.string_a AS "stringA",
		a.string_b AS "stringB",
		a.string_c AS "stringC",
		a.flag AS "flag",
		a.begin_end_month AS "beginEndMonth",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="oaUserAccountUserLogJoins">
		LEFT JOIN sys_user u2 ON u2.id = a.user_id
	</sql>
    
	<select id="get" resultType="OaUserAccountUserLog">
		SELECT 
			<include refid="oaUserAccountUserLogColumns"/>
		FROM oa_user_account_user_log a
		<include refid="oaUserAccountUserLogJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="OaUserAccountUserLog">
		SELECT 
			<include refid="oaUserAccountUserLogColumns"/>
		FROM oa_user_account_user_log a
		<include refid="oaUserAccountUserLogJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="OaUserAccountUserLog">
		SELECT 
			<include refid="oaUserAccountUserLogColumns"/>
		FROM oa_user_account_user_log a
		<include refid="oaUserAccountUserLogJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO oa_user_account_user_log(
			id,
			user_id,
			extended_id,
			sales_volume_id,
			branch_quota,
			pool_funds,
			cost_incurred,
			money,
			spare_a,
			spare_b,
			spare_c,
			string_a,
			string_b,
			string_c,
			flag,
			begin_end_month,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{userId},
			#{extendedId},
			#{salesVolumeId},
			#{branchQuota}*100,
			#{poolFunds}*100,
			#{costIncurred}*100,
			#{money}*100,
			#{spareA}*100,
			#{spareB}*100,
			#{spareC}*100,
			#{stringA},
			#{stringB},
			#{stringC},
			#{flag},
			#{beginEndMonth},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE oa_user_account_user_log SET 	
			user_id = #{userId},
			extended_id=#{extendedId},
			sales_volume_id = #{salesVolumeId},
			branch_quota = #{branchQuota}*100,
			pool_funds = #{poolFunds}*100,
			cost_incurred = #{costIncurred}*100,
			money = #{money}*100,
			spare_a = #{spareA}*100,
			spare_b = #{spareB}*100,
			spare_c = #{spareC}*100,
			string_a = #{stringA},
			string_b = #{stringB},
			string_c = #{stringC},
			flag = #{flag},
			begin_end_month = #{beginEndMonth},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE oa_user_account_user_log SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>